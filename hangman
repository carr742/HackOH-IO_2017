#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <iostream>
#include <string>
#include <array>
#include <climits>
#include <cstdlib>

//need to include check to see if letter already taken
//maybe put the whole thing in a turn counter, create an array of guesses?

//this takes input in from the command line
int main() {

    //welcome
    printf("Welcome to hangman! Select the number for the category which you want to play: \n");
    printf("1 = sports\n");
    printf("2 = animals\n");
    printf("3 = countries\n");
    printf("Input: ");
    
    //scan in a category value
    int category;
    scanf(" %i", &category);
    
    std::string first, second, third, fourth, fifth;
    
    //if-else-if statement to define string array for words
    if (category == 1)
    {
        first="soccer";
        second="basketball";
        third="tennis";
        fourth="badminton";
        fifth="volleyball";
    }
    else if (category == 2)
    {
        first="tiger";
        second="walrus";
        third="penguin";
        fourth="cheetah";
        fifth="gorilla";
    }
    else if (category == 3)
    {
        first="england";
        second="afghanistan";
        third="austrailia";
        fourth="taiwan";
        fifth="algeria";
    }
    else
    {
        printf("Error: Input not one of the valid categories. Run the program again with either a 1, 2, or 3.\n");
        return 1;
    }

    //get a random number between 0 and 4
    int r = (rand()%4)+1;
    
    std::string answer;
    
    //switch case to assign a string
    switch (r)
    {
        case 0:
            answer=first;
            break;
        case 1:
            answer=second;
            break;
        case 2:
            answer=third;
            break;
        case 3:
            answer=fourth;
            break;
        case 4:
            answer=fifth;
            break;
        default:
            break;
    }
    
    //get the length of the string, converting it from unsigned long to int
    int length = answer.length();
    
    //define char arrays of size the length of the random word
    char blank[length];
    
    //make a string of characters for the answer
    for (int k=0;k<length;k++)
    {
        blank[k] = '_';
    }
    
    //initialize char variable
    char letter;
    int counter = 0;
    int lives = 6;
    
    //**************************************************//
    
    //main body of the game
    
    do
    {
        //get a letter from the user
        printf("\n");
        printf("Guess a letter, lowercase only: ");
        scanf(" %c", &letter);
        
        //check if letter is in word
        int i;
        for (i=0;i<length;i++)       //this seems to determine if a life is lost or not
        {
            //iterate over loop
            //compare letter to each letter in the loop
            if (letter == answer[i])
            {
                
                //if letter is in word, print guess was correct
                printf("Your guess was correct!\n");
            
                //change blank to include the correct letter
                blank[i] = letter;
                
                //check to see if there are more than 1 copy of the letter in the program. Only works if there are 2 copies of the same letter in the word.
                for (int z=i;z<length;z++)
                {
                    if (letter == answer[z])
                    {
                       blank[z] = letter;
                    }
                }
                
                //print the blanks with guessed letter
                for (r=0;r<length;r++)
                {
                    printf("%c ",blank[r]);
                    
                }
                
                //break program
                break;
            }
        }
        
        //if letter wasn't in the work
        if (i == length)
        {
            //print guess incorrect
            printf("Sorry, your guess was incorrect\n");
            lives--;
            
            switch (lives)
            {
               case 5:
                    printf("T----\n");
                    printf("|   |\n");
                    printf("|   O\n");
                    printf("|  \n");
                    printf("|  \n");
                    printf("|   \n");
                    break;
                case 4:
                    printf("T----\n");
                    printf("|   |\n");
                    printf("|   O\n");
                    printf("|   |\n");
                    printf("|    \n");
                    printf("|    \n");
                    break;
                case 3:
                    printf("T----\n");
                    printf("|   |\n");
                    printf("|   O\n");
                    printf("|   |\\ \n");
                    printf("|   \n");
                    printf("|    \n");
                    break;
                case 2:
                    printf("T----\n");
                    printf("|   |\n");
                    printf("|   O\n");
                    printf("|  /|\\ \n");
                    printf("|    \n");
                    printf("|    \n");
                    break;
                case 1:
                    printf("T----\n");
                    printf("|   |\n");
                    printf("|   O\n");
                    printf("|  /|\\ \n");
                    printf("|  / \n");
                    printf("|    \n");
                    break;
                default:
                    break;
            }
        
            
        }
        
        //condition to see if the game has been won
        //initialize counter variable
        counter = 0;
        for (int j=0;j<length;j++)
        {
            //iterate through blank loop to see if any blank spaces. If no blank spaces, user has won the game.
            //if statement to create a counter for the number of blank spaces. If above zero, can't exit the loop
            
            //add one to the counter
            if (blank[j] == '_')
            {
                counter++;
            }
        }
        
        //if the blank space counter is 0 or lives is 0, exit the program
        if (counter == 0 || lives == 0)
        {
            break;
        }

    }
    while ((lives > 0) || (counter > 0));
    
//**************************************************//
  
    //win conidtion
    if (lives == 0)
    {
        printf("T----\n");
        printf("|   |\n");
        printf("|   O\n");
        printf("|  /|\\ \n");
        printf("|  // \n");
        printf("|    \n");
        printf("Sorry, you lost the game!\n");
        printf("The word was ");
        for (int i = 0; i < length; i++)
        {
            printf("%c",answer[i]);
        }
    }
    else {
        printf("\n");
        printf("You won the game!\n");
    }
    
    return 0;
}
  
